// <auto-generated />
using Entity_framework;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Entityframework.Migrations
{
    [DbContext(typeof(EntityDbContexte))]
    partial class EntityDbContexteModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.2");

            modelBuilder.Entity("ChampionDBRunePagesDb", b =>
                {
                    b.Property<int>("RunePagesId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("championsId")
                        .HasColumnType("INTEGER");

                    b.HasKey("RunePagesId", "championsId");

                    b.HasIndex("championsId");

                    b.ToTable("ChampionDBRunePagesDb");
                });

            modelBuilder.Entity("Entity_framework.ChampionDB", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Bio")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<int>("Class")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Icon")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Image")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("ChampionsSet", (string)null);
                });

            modelBuilder.Entity("Entity_framework.DataBase.CaracteristicDb", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ChampionForeignKey")
                        .HasColumnType("INTEGER");

                    b.Property<int>("championId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("key")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("valeur")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("championId");

                    b.ToTable("CaracteristicSet");
                });

            modelBuilder.Entity("Entity_framework.DataBase.CategoryDicDB", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("category")
                        .HasColumnType("INTEGER");

                    b.Property<int>("runeId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("runesPagesForeignKey")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("category")
                        .IsUnique();

                    b.HasIndex("runeId");

                    b.HasIndex("runesPagesForeignKey");

                    b.ToTable("CategoryDicSet", (string)null);
                });

            modelBuilder.Entity("Entity_framework.DataBase.RunePagesDb", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("RunePagesSet");
                });

            modelBuilder.Entity("Entity_framework.RuneDB", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<int>("Family")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Icon")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Image")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("RunesSet", (string)null);
                });

            modelBuilder.Entity("Entity_framework.SkillDB", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ChampionForeignKey")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ChampionForeignKey");

                    b.ToTable("SkillSet", (string)null);
                });

            modelBuilder.Entity("Entity_framework.SkinDB", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ChampionForeignKey")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<string>("Icon")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Image")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<float>("Price")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.HasIndex("ChampionForeignKey");

                    b.ToTable("SkinsSet", (string)null);
                });

            modelBuilder.Entity("ChampionDBRunePagesDb", b =>
                {
                    b.HasOne("Entity_framework.DataBase.RunePagesDb", null)
                        .WithMany()
                        .HasForeignKey("RunePagesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entity_framework.ChampionDB", null)
                        .WithMany()
                        .HasForeignKey("championsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Entity_framework.DataBase.CaracteristicDb", b =>
                {
                    b.HasOne("Entity_framework.ChampionDB", "champion")
                        .WithMany("caracteristics")
                        .HasForeignKey("championId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("champion");
                });

            modelBuilder.Entity("Entity_framework.DataBase.CategoryDicDB", b =>
                {
                    b.HasOne("Entity_framework.RuneDB", "rune")
                        .WithMany("runesPages")
                        .HasForeignKey("runeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entity_framework.DataBase.RunePagesDb", "runePage")
                        .WithMany("CategoryRunePages")
                        .HasForeignKey("runesPagesForeignKey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("rune");

                    b.Navigation("runePage");
                });

            modelBuilder.Entity("Entity_framework.SkillDB", b =>
                {
                    b.HasOne("Entity_framework.ChampionDB", "Champion")
                        .WithMany("Skills")
                        .HasForeignKey("ChampionForeignKey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Champion");
                });

            modelBuilder.Entity("Entity_framework.SkinDB", b =>
                {
                    b.HasOne("Entity_framework.ChampionDB", "Champion")
                        .WithMany("Skins")
                        .HasForeignKey("ChampionForeignKey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Champion");
                });

            modelBuilder.Entity("Entity_framework.ChampionDB", b =>
                {
                    b.Navigation("Skills");

                    b.Navigation("Skins");

                    b.Navigation("caracteristics");
                });

            modelBuilder.Entity("Entity_framework.DataBase.RunePagesDb", b =>
                {
                    b.Navigation("CategoryRunePages");
                });

            modelBuilder.Entity("Entity_framework.RuneDB", b =>
                {
                    b.Navigation("runesPages");
                });
#pragma warning restore 612, 618
        }
    }
}
