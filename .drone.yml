kind: pipeline
type: docker
name: default
 
trigger:
  event:
    - push

steps:
  - name: build
    image: mcr.microsoft.com/dotnet/sdk:7.0
    commands:
      - cd Sources/
      - dotnet workload install android
      - dotnet workload restore ViewModels/ViewModels.csproj
      - dotnet restore ViewModels/ViewModels.csproj
      - dotnet build ViewModels/ViewModels.csproj -c Release --no-restore
      - dotnet publish ViewModels/ViewModels.csproj -c Release --no-restore -o CI_PROJECT_DIR/build/release
      - dotnet restore Api/Api.csproj
      - dotnet restore Champion_TestMemory/TestEntityUT.csproj
      - dotnet restore ClientApi/ClientApi.csproj
      - dotnet restore Console/BiblioMilieu.csproj
      - dotnet restore DTOLol/DTOLol.csproj
      - dotnet restore DbManager/DbManager.csproj
      - dotnet restore Entity_framework/Entity_framework.csproj
      - dotnet restore Model/Model.csproj
      - dotnet restore Shared/Shared.csproj
      - dotnet restore StubLib/StubLib.csproj
      - dotnet restore TestChampion/TestControllerApiUt.csproj
      - dotnet restore Tests/ConsoleTests/ConsoleTests.csproj
      - dotnet build Api/Api.csproj -c Release --no-restore
      - dotnet build Champion_TestMemory/TestEntityUT.csproj -c Release --no-restore
      - dotnet build ClientApi/ClientApi.csproj -c Release --no-restore
      - dotnet build Console/BiblioMilieu.csproj -c Release --no-restore
      - dotnet build DTOLol/DTOLol.csproj -c Release --no-restore
      - dotnet build DbManager/DbManager.csproj -c Release --no-restore
      - dotnet build Entity_framework/Entity_framework.csproj -c Release --no-restore
      - dotnet build Model/Model.csproj -c Release --no-restore
      - dotnet build Shared/Shared.csproj -c Release --no-restore
      - dotnet build StubLib/StubLib.csproj -c Release --no-restore
      - dotnet build TestChampion/TestControllerApiUt.csproj -c Release --no-restore
      - dotnet build Tests/ConsoleTests/ConsoleTests.csproj -c Release --no-restore
      - dotnet publish Api/Api.csproj -c Release --no-restore -o CI_PROJECT_DIR/build/release
      - dotnet publish Champion_TestMemory/TestEntityUT.csproj -c Release --no-restore -o CI_PROJECT_DIR/build/release
      - dotnet publish ClientApi/ClientApi.csproj -c Release --no-restore -o CI_PROJECT_DIR/build/release
      - dotnet publish Console/BiblioMilieu.csproj -c Release --no-restore -o CI_PROJECT_DIR/build/release
      - dotnet publish DTOLol/DTOLol.csproj -c Release --no-restore -o CI_PROJECT_DIR/build/release
      - dotnet publish DbManager/DbManager.csproj -c Release --no-restore -o CI_PROJECT_DIR/build/release
      - dotnet publish Entity_framework/Entity_framework.csproj -c Release --no-restore -o CI_PROJECT_DIR/build/release
      - dotnet publish Model/Model.csproj -c Release --no-restore -o CI_PROJECT_DIR/build/release
      - dotnet publish Shared/Shared.csproj -c Release --no-restore -o CI_PROJECT_DIR/build/release
      - dotnet publish StubLib/StubLib.csproj -c Release --no-restore -o CI_PROJECT_DIR/build/release
      - dotnet publish TestChampion/TestControllerApiUt.csproj -c Release --no-restore -o CI_PROJECT_DIR/build/release
      - dotnet publish Tests/ConsoleTests/ConsoleTests.csproj -c Release --no-restore -o CI_PROJECT_DIR/build/release
      
  - name: tests
    image: mcr.microsoft.com/dotnet/sdk:6.0
    commands:
      - cd Sources/
      - dotnet restore Api/Api.csproj
      - dotnet restore Champion_TestMemory/TestEntityUT.csproj
      - dotnet restore ClientApi/ClientApi.csproj
      - dotnet restore Console/BiblioMilieu.csproj
      - dotnet restore DTOLol/DTOLol.csproj
      - dotnet restore DbManager/DbManager.csproj
      - dotnet restore Entity_framework/Entity_framework.csproj
      - dotnet restore Model/Model.csproj
      - dotnet restore Shared/Shared.csproj
      - dotnet restore StubLib/StubLib.csproj
      - dotnet restore TestChampion/TestControllerApiUt.csproj
      - dotnet restore Tests/ConsoleTests/ConsoleTests.csproj
      - dotnet test Api/Api.csproj --no-restore
      - dotnet test Champion_TestMemory/TestEntityUT.csproj --no-restore
      - dotnet test ClientApi/ClientApi.csproj --no-restore
      - dotnet test Console/BiblioMilieu.csproj --no-restore
      - dotnet test DTOLol/DTOLol.csproj --no-restore
      - dotnet test DbManager/DbManager.csproj --no-restore
      - dotnet test Entity_framework/Entity_framework.csproj --no-restore
      - dotnet test Model/Model.csproj --no-restore
      - dotnet test Shared/Shared.csproj --no-restore
      - dotnet test StubLib/StubLib.csproj --no-restore
      - dotnet test TestChampion/TestControllerApiUt.csproj --no-restore
      - dotnet test Tests/ConsoleTests/ConsoleTests.csproj --no-restore
    depends_on: [build]

  - name: code-analysis
    image: hub.codefirst.iut.uca.fr/thomas.bellembois/codefirst-dronesonarplugin-dotnet6
    commands:
      - cd Sources/
      - dotnet restore Api/Api.csproj
      - dotnet restore Champion_TestMemory/TestEntityUT.csproj
      - dotnet restore ClientApi/ClientApi.csproj
      - dotnet restore Console/BiblioMilieu.csproj
      - dotnet restore DTOLol/DTOLol.csproj
      - dotnet restore DbManager/DbManager.csproj
      - dotnet restore Entity_framework/Entity_framework.csproj
      - dotnet restore Model/Model.csproj
      - dotnet restore Shared/Shared.csproj
      - dotnet restore StubLib/StubLib.csproj
      - dotnet restore TestChampion/TestControllerApiUt.csproj
      - dotnet restore Tests/ConsoleTests/ConsoleTests.csproj
      - dotnet sonarscanner begin /k:EntityApiFrameworkLol /d:sonar.host.url=$${PLUGIN_SONAR_HOST} /d:sonar.coverageReportPaths="coveragereport/SonarQube.xml" /d:sonar.coverage.exclusions="Tests/**,Entity_framework/Migrations/**,DbManager/**,ClientApi/**,Console/**,MapperApi/Mapper/SkillMapper.cs,DTOLol/DTOSkill.cs" /d:sonar.login=$${PLUGIN_SONAR_TOKEN} 
      - dotnet build Api/Api.csproj -c Release --no-restore
      - dotnet build Champion_TestMemory/TestEntityUT.csproj -c Release --no-restore
      - dotnet build ClientApi/ClientApi.csproj -c Release --no-restore
      - dotnet build Console/BiblioMilieu.csproj -c Release --no-restore
      - dotnet build DTOLol/DTOLol.csproj -c Release --no-restore
      - dotnet build DbManager/DbManager.csproj -c Release --no-restore
      - dotnet build Entity_framework/Entity_framework.csproj -c Release --no-restore
      - dotnet build Model/Model.csproj -c Release --no-restore
      - dotnet build Shared/Shared.csproj -c Release --no-restore
      - dotnet build StubLib/StubLib.csproj -c Release --no-restore
      - dotnet build TestChampion/TestControllerApiUt.csproj -c Release --no-restore
      - dotnet build Tests/ConsoleTests/ConsoleTests.csproj -c Release --no-restore
      - dotnet test Api/Api.csproj --logger trx --no-restore /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura --collect "XPlat Code Coverage"
      - dotnet test Champion_TestMemory/TestEntityUT.csproj --logger trx --no-restore /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura --collect "XPlat Code Coverage"
      - dotnet test ClientApi/ClientApi.csproj --logger trx --no-restore /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura --collect "XPlat Code Coverage"
      - dotnet test Console/BiblioMilieu.csproj --logger trx --no-restore /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura --collect "XPlat Code Coverage"
      - dotnet test DTOLol/DTOLol.csproj --logger trx --no-restore /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura --collect "XPlat Code Coverage"
      - dotnet test DbManager/DbManager.csproj --logger trx --no-restore /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura --collect "XPlat Code Coverage"
      - dotnet test Entity_framework/Entity_framework.csproj --logger trx --no-restore /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura --collect "XPlat Code Coverage"
      - dotnet test Model/Model.csproj --logger trx --no-restore /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura --collect "XPlat Code Coverage"
      - dotnet test Shared/Shared.csproj --logger trx --no-restore /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura --collect "XPlat Code Coverage"
      - dotnet test StubLib/StubLib.csproj --logger trx --no-restore /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura --collect "XPlat Code Coverage"
      - dotnet test TestChampion/TestControllerApiUt.csproj --logger trx --no-restore /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura --collect "XPlat Code Coverage"
      - dotnet test Tests/ConsoleTests/ConsoleTests.csproj --logger trx --no-restore /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura --collect "XPlat Code Coverage"
      - reportgenerator -reports:"**/coverage.cobertura.xml" -reporttypes:SonarQube -targetdir:"coveragereport"
      - dotnet publish Api/Api.csproj -c Release --no-restore -o CI_PROJECT_DIR/build/release
      - dotnet publish Champion_TestMemory/TestEntityUT.csproj -c Release --no-restore -o CI_PROJECT_DIR/build/release
      - dotnet publish ClientApi/ClientApi.csproj -c Release --no-restore -o CI_PROJECT_DIR/build/release
      - dotnet publish Console/BiblioMilieu.csproj -c Release --no-restore -o CI_PROJECT_DIR/build/release
      - dotnet publish DTOLol/DTOLol.csproj -c Release --no-restore -o CI_PROJECT_DIR/build/release
      - dotnet publish DbManager/DbManager.csproj -c Release --no-restore -o CI_PROJECT_DIR/build/release
      - dotnet publish Entity_framework/Entity_framework.csproj -c Release --no-restore -o CI_PROJECT_DIR/build/release
      - dotnet publish Model/Model.csproj -c Release --no-restore -o CI_PROJECT_DIR/build/release
      - dotnet publish Shared/Shared.csproj -c Release --no-restore -o CI_PROJECT_DIR/build/release
      - dotnet publish StubLib/StubLib.csproj -c Release --no-restore -o CI_PROJECT_DIR/build/release
      - dotnet publish TestChampion/TestControllerApiUt.csproj -c Release --no-restore -o CI_PROJECT_DIR/build/release
      - dotnet publish Tests/ConsoleTests/ConsoleTests.csproj -c Release --no-restore -o CI_PROJECT_DIR/build/release
      - dotnet sonarscanner end /d:sonar.login=$${PLUGIN_SONAR_TOKEN}
    secrets: [ SECRET_SONAR_LOGIN ]
    settings:
      # accessible en ligne de commande par ${PLUGIN_SONAR_HOST}
      sonar_host: https://codefirst.iut.uca.fr/sonar/
      # accessible en ligne de commande par ${PLUGIN_SONAR_TOKEN}
      sonar_token:
        from_secret: SECRET_SONAR_LOGIN
    depends_on: [tests]

  - name: generate-and-deploy-docs
    image: hub.codefirst.iut.uca.fr/thomas.bellembois/codefirst-docdeployer
    failure: ignore
    volumes:
      - name: docs
        path: /docs
    commands:
      #- cd Documentation/doxygen
      #- doxygen Doxyfile
      - /entrypoint.sh
    when:
      branch:
        - master
    depends_on: [ build ]

  

  - name: docker-build
    image: plugins/docker
    settings:
        dockerfile: Sources/Dockerfile
        context: Sources/
        registry: hub.codefirst.iut.uca.fr
        repo: hub.codefirst.iut.uca.fr/rami.khedair/entityframework_api_lol
        username:
          from_secret: SECRET_REGISTRY_USERNAME
        password:
          from_secret: SECRET_REGISTRY_PASSWORD
    when:
      branch:
        - master
    depends_on: [ tests ]

    # container deployment
  - name: deploy-container
    image: hub.codefirst.iut.uca.fr/thomas.bellembois/codefirst-dockerproxy-clientdrone:latest
    environment:
        IMAGENAME: hub.codefirst.iut.uca.fr/rami.khedair/entityframework_api_lol:latest
        CONTAINERNAME: entityframework_api_lol
        COMMAND: create
        OVERWRITE: true
    depends_on: [ docker-build ]

volumes:
- name: docs
  temp: {}
